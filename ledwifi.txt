{
    "name": "Wifiledlamps",
    "version": "1.0.0",
    "author": "Julien Syx",
    "pypi-url": "https://pypi.python.org/pypi/lisa-plugin-Wifiledlamps",
    "github-url": "https://raw.githubusercontent.com/Seraf/LISA-PLUGINS-Wifiledlamps/master/lisa/plugins/Wifiledlamps/wifiledlamps.json",
    "description": [
        {"lang": "fr", "description": "Ce plugin permet à LISA de gérer les lampes LED en wifi"},
        {"lang": "en", "description": "This plugin allow LISA to manage wifi led lamp"}
    ],
    "enabled": 1,
    "lang": ["fr","en"],
    "configuration": {
        "controller": {
            "address": "192.168.1.101",
            "port": 50000
        },
        "intents": {
            "wifiledlamps_switch": {
                "method": "switch",
                "corpus": {}
            },
            "wifiledlamps_color": {
                "method": "changeColor",
                "corpus": {}
            }
        },
        "widgets": {
            "switch": "Wifiledlamps.web.views.switch"
        }
    }
}
.============


# -*- coding: UTF-8 -*-

from lisa.server.plugins.IPlugin import IPlugin
import gettext
import inspect
import os
import wifileds


class Wifiledlamps(IPlugin):
    def __init__(self):
        super(Wifiledlamps, self).__init__()
        self.configuration_plugin = self.mongo.lisa.plugins.find_one({"name": "Wifiledlamps"})
        self.path = os.path.realpath(os.path.abspath(os.path.join(os.path.split(
            inspect.getfile(inspect.currentframe()))[0],os.path.normpath("../lang/"))))
        self._ = translation = gettext.translation(domain='wifiledlamps',
                                                   localedir=self.path,
                                                   languages=[self.configuration_lisa['lang']]).ugettext
        self.led_connection = wifileds.limitlessled.connect(self.configuration_plugin['configuration']['controller']['address'],
                                                            self.configuration_plugin['configuration']['controller']['port'])

    def switch(self, jsonInput):
        if jsonInput['outcome']['entities']['wifiledlamps_actions']['value'] == 'on':
            self.led_connection.rgb.all_on()
            body = self._('lights are on')
        elif jsonInput['outcome']['entities']['wifiledlamps_actions']['value'] == 'off':
            self.led_connection.rgb.all_off()
            body = self._('lights are off')
        else:
            body = self._('no valid command')
        return {"plugin": "Wifiledlamps",
                "method": "switch",
                "body": body
        }

